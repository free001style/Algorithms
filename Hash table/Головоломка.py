# Петя разгадывает головоломку, которая устроена следующим образом. Дана квадратная таблица размера NxN,
# в каждой клетке которой записана какая-нибудь латинская буква. Кроме того, дан список ключевых слов.
# Пете нужно, взяв очередное ключевое слово, найти его в таблице. То есть найти в таблице все буквы этого
# слова, причем они должны быть расположены так, чтобы клетка, в которой расположена каждая последующая
# буква слова, была соседней с клеткой, в которой записана предыдущая буква (клетки называются соседними,
# если они имеют общую сторону — то есть соседствуют по вертикали или по горизонтали). Например, на рисунке
# ниже показано, как может быть расположено в таблице слово olympiad. Когда Петя находит слово, он вычеркивает
# его из таблицы. Использовать уже вычеркнутые буквы в других ключевых словах нельзя. После того, как найдены
# и вычеркнуты все ключевые слова, в таблице остаются еще несколько букв, из которых Петя должен составить
# слово, зашифрованное в головоломке. Помогите Пете в решении этой головоломки, написав программу, которая
# по данной таблице и списку ключевых слов выпишет, из каких букв Петя должен сложить слово, то есть какие
# буквы останутся в таблице после вычеркивания ключевых слов.

from collections import defaultdict

end = []
db = defaultdict(int)
n, m = map(int, input().split())
for i in range(n):
    strg = input()
    for j in strg:
        db[j] += 1
for i in range(m):
    word = input()
    for j in word:
        if j in db:
            db[j] -= 1
for i in db.items():
    if i[1] != 0:
        for j in range(i[1]):
            end.append(i[0])
print(''.join(end))
