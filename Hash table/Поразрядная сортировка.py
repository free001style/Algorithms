# Поразрядная сортировка является одним из видов сортировки, которые работают за линейное от
# размера сортируемого массива время. Такая скорость достигается за счет того, что эта сортировка
# использует внутреннюю структуру сортируемых объектов. Изначально этот алгоритм использовался
# для сортировки перфокарт. Первая его компьютерная реализация была создана в университете MIT
# Гарольдом Сьюардом (Harold Н. Seward). Опишем алгоритм подробнее. Пусть задан массив строк
# s 1 ,..., s i причем все строки имеют одинаковую длину m . Работа алгоритма состоит из m фаз.
# На i -ой фазе строки сортируются па i -ой с конца букве. Происходит это следующим образом.
# Будем, для простоты, в этой задаче рассматривать строки из цифр от 0 до 9. Для каждой цифры
# создается «корзина» («bucket»), после чего строки s i распределяются по «корзинам» в соответствии
# с i -ой с конца цифрой. Строки, у которых i -ая с конца цифра равна j попадают в j -ую корзину
# (например, строка 123 на первой фазе попадет в третью корзину, на второй — во вторую, на третьей — в первую).
# После этого элементы извлекаются из корзин в порядке увеличения номера корзины. Таким образом, после
# первой фазы строки отсортированы по последней цифре, после двух фаз - по двум последним, ..., после m
# фаз - по всем. При важно, чтобы элементы в корзинах сохраняли тот же порядок, что и в исходном массиве
# (до начала этой фазы). Например, если массив до первой фазы имеет вид: 111,112,211, 311, то элементы
# по корзинам распределятся следующим образом: в первой корзине будет. 111,211,311, а второй: 112.
# Ваша задача состоит в написании программы, детально показывающей работу этого алгоритма на заданном массиве.

n = int(input())
lst = []
for i in range(n):
    lst.append(input())
length = len(lst[-1])
rang = 10
print('Initial array:')
print(', '.join(list(map(str, lst))))
print('**********')
for i in range(length):
    B = [[] for k in range(rang)]
    for j in range(len(lst)):
        part = int(lst[j][-1 - i])
        B[part].append(lst[j])
    print('Phase', i + 1)
    for k in range(rang):
        if B[k] != []:
            print(f'Bucket {k}: {", ".join(str(_) for _ in B[k])}')
        else:
            print(f'Bucket {k}: empty')
    print("**********")
    lst = []
    for k in range(rang):
        lst += B[k]
print('Sorted array:')
print(', '.join(list(map(str, lst))))
